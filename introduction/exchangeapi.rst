################################################################################
API接口说明
################################################################################

API允许根据请求创建私钥（钱包）以获得资金，然后将其发送给其他钱包。所有创建的私钥都以加密的形式存储。

********************************************************************************
启动参数
********************************************************************************

为了使用此API，你需要在启动政务链平台时指定以下参数。

**-boltDir** - 包含创建和存储私钥的文件的目录。NoSQL数据库BoltDB用于存储密钥。该文件被命名为 *exchangeapi.db* 。如果未指定参数，则将在当前目录中创建该文件。

.. code:: 
      
      -boltDir=/home/temp
      
**-boltPsw**  - 写入数据库时​​用于加密私钥的密码。如果在启动时未指定密码，API将不起作用。首次启动时指定的密码应在后续启动时指定。切记不要忘记密码，因为它没有保存在任何地方。如果你指定的密码不正确，或者输入“console”作为密码，则在运行政务链后，系统会提示你在控制台中输入密码。另外，如果密码已经被设置，但是在命令行参数中没有指定，将会在控制台中被请求输入密码。

.. code:: 

      -boltPsw=mypass344
      
**-apiToken** - 此参数指定在向API发出请求时需要传递的通证（Token）。指定的通证（Token）将被保存，并可以在随后的启动中省略。如果没有指定的密码，你可以调用API命令而不使用此参数。如果你需要更改通证（Token），应在该参数中使用新值启动政务链。

.. code:: 

      -apiToken=qweuytwuy347834
      
********************************************************************************
API请求
********************************************************************************

API请求的响应采用JSON格式并都有一个错误的字段，如果错误字段为空，则该请求已经成功执行且没有错误。否则该字段将包含发生错误的文本信息。

/exchangeapi/newkey
==============================
该命令生成一个私钥，将其记录到密钥文件中，并返回公钥和钱包地址。例如： ``/exchange/newkey?token=qweuytwuy34783``。

响应示例:

.. code:: 

   {"error":"", 
    "public":"b7880fa40779d673e7....238def72881d6c2b6c60ffcc2ec7f050141d", 
    "address":"0773-5161-7272-4133-0241", 
    "key_id":7735161727241330241
    }

/exchange/send?sender=...&recipient=...&amount=...
=========================================================================================
该命令将数据库中的钱包（**sender**）的钱发送到指定的钱包（**recipient**）。钱包可以用任何格式指定 - ``XXXX-....-XXXX, int64, uint64``，注意，该命令发送的交易，不用等待确认收款。发送金额（**amount**）应在 *qGAC* 中指定。事务的哈希值在 **txhash** 字段中返回。

例如, ``/exchange/send?sender=1693-7869-8202-2463-0602&recipient=-3521799150320731671&amount=999000000000000`` 

响应示例:

.. code:: 

      {"txhash": "734fa..89ab5",
     "error":""}

/exchangeapi/balance?key_id=....
==================================================
该命令返回任何钱包的余额。

例如， ``/exchangeapi/balance?key_id=0773-5161-7272-4133-0241``。

响应示例:

.. code:: 

     {"error":"","amount":"99992318000000000000","gac":"99.992318"}

/exchangeapi/history?key_id=...&count=...
===========================================================
该命令返回指定钱包中最后一笔资金的流向。``count`` 是一个可选参数，确定要返回的记录数（可以返回 *1* 条）。默认情况下，将返回50个条目，最大数量为200。

响应:

* *error* - 错误消息；
* *history* - 余额的历史数组；
* *block_id* - 区块ID；
* *dif* - 金额的变化值；
* *txhash* - 事务哈希； 
* *amount* - 可用qGAC的数量；
* *gac* - 可用GAC的数量；
* *time* - 交易时间戳。


例如：``/exchangeapi/history?key_id=1693-7869-8202-2463-0602&count=10&token=mytoken``。

响应示例:

.. code:: 

    {"error":"",
    "history":[{"block_id":"118855","dif":"-0.001",
    "amount":"99992318000000000000","gac":"99.992318","time":"03.05.2017 10:48:14"},
    {"block_id":"118855","dif":"-0.001999","amount":"99993318000000000000","gac":"99.993318",
    "time":"03.05.2017 10:48:14"},
    {"block_id":"112283","dif":"-0.001","amount":"99995317000000000000","gac":"99.995317",
    "time":"02.05.2017 18:28:24"}]}

/exchangeapi/txstatus?hash=...
==============================
		
该命令返回在 *hash* 字段中有关指定事务的哈希信息。如果 *block_id* 为 ``0`` 并且 *error* 字段为空，则事务尚未进入该区块。

响应

* *block_id* - 区块ID；
* *txhash* - 事务哈希；
* *amount* - 可用qGAC的数量；
* *gac* - GAC的交易金额；
* *time* - 交易时间戳；
* *sender* - 发款人ID；
* *recipient* - 收款人ID；
* *sender_address* - 发款人账户地址 ``XXXX-...-XXXX`` 格式；
* *recipient_address* - 收款人账户地址 ``XXXX-...-XXXX`` 格式；
* *confirmations* - 当前区块的下一区块数；
* *error* - 错误信息。

例如：``/exchangeapi/txstatus?hash=ca378ca44c388b79fba6d8643c5e8935``。

响应示例：

.. code:: 

      {
    "block_id": "18111",
    "confirmations": "3618",
    "txhash": "ca378ca44c388b79fba6d8643c5e8935",
    "amount": "46000000000000",
    "gac": "0.000046",
    "time": "1505306953",
    "sender": "7480871936035188899",
    "recipient": "-2411392676761618411",
    "sender_address": "0748-0871-9360-3518-8899",
    "recipient_address": "1603-5351-3969-4793-3205",
    "error": ""
   }
   
